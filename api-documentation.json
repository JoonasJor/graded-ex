{
  "openapi": "3.1.0",
  "info": {
    "title": "bbb",
    "version": "1.0",
    "description": "BCI graded exercise",
    "summary": "BCI graded exercise"
  },
  "servers": [
    {
      "url": "https://bci-graded-exc.herokuapp.com"
    }
  ],
  "paths": {
    "/users/login": {
      "parameters": [],
      "post": {
        "summary": "Login",
        "operationId": "post-login",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User Not Found"
          }
        },
        "description": "Login.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all user data",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-users",
        "description": "Get all user data."
      },
      "post": {
        "summary": "Register new user",
        "operationId": "post-users",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "x-examples": {
                    "example-1": {
                      "id": "fdd69d2d-e619-414f-8f78-4c426fb5f1cf"
                    }
                  }
                },
                "examples": {}
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "description": "Post the necessary fields for the API to create a new user."
        },
        "description": "Register new user and return userId"
      }
    },
    "/users/{userId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get single user data",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-users-userId",
        "description": "Get single user data matching the userId."
      }
    },
    "/items": {
      "get": {
        "summary": "Get all item data",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Item"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-items",
        "description": "Get all item data."
      },
      "post": {
        "summary": "Create new item",
        "operationId": "post-items",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item"
              }
            }
          }
        },
        "description": "Create new item."
      }
    },
    "/items/{itemId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "itemId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get single item data",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-item-itemId",
        "description": "Get single item data matching the itemId."
      },
      "put": {
        "summary": "Update single item data",
        "operationId": "put-item-itemId",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item"
              }
            }
          }
        },
        "description": "Update single item data matching the itemId."
      },
      "delete": {
        "summary": "Delete single item",
        "operationId": "delete-items-itemId",
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Delete single item matching the itemId."
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "title": "User",
        "type": "object",
        "description": "",
        "examples": [
          {
            "id": 142,
            "firstName": "Alice",
            "lastName": "Smith",
            "email": "alice.smith@gmail.com",
            "dateOfBirth": "1997-10-31",
            "emailVerified": true,
            "signUpDate": "2019-08-24"
          }
        ],
        "properties": {
          "userId": {
            "description": "Unique identifier for the given user.",
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "password"
        ]
      },
      "Item": {
        "title": "Item",
        "type": "object",
        "x-internal": false,
        "properties": {
          "itemId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "description": "clothing, cars etc"
          },
          "location": {
            "type": "string",
            "description": "city, county etc"
          },
          "images": {
            "type": "array",
            "description": "max 4 images\n",
            "items": {
              "type": "string"
            }
          },
          "price": {
            "type": "string"
          },
          "dateOfPosting": {
            "type": "string"
          },
          "delivery": {
            "type": "object",
            "properties": {
              "shipping": {
                "type": "boolean"
              },
              "pickup": {
                "type": "boolean"
              }
            }
          },
          "seller": {
            "type": "object",
            "required": [
              "firstName",
              "lastName",
              "email",
              "phone"
            ],
            "properties": {
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "title",
          "category",
          "location",
          "images",
          "price",
          "dateOfPosting",
          "delivery",
          "seller"
        ]
      }
    }
  }
}